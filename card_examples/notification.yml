# replace "{your_entity_id}" with your input_boolean id
# replace "{your_service_id}" and "{your_service_entity_id}" for the actions
type: custom:mod-card
card:
  type: vertical-stack
  cards:
    - type: conditional
      conditions:
        - condition: state
          entity: input_boolean.{your_entity_id}
          state: on
      card:
        type: custom:button-card
        template: notification_card
        icon: mdi:server
        label: This is the label
        variables:
          icon_bg: rgba(255, 152, 0, 0.12)
          badge_bg: "#ff9800"
          badge_icon: mdi:exclamation
          entity: input_boolean.{your_entity_id}
          card_name: Hello World
          actions_list:
            - type: custom:button-card
              icon: mdi:play
              show_name: false
              tap_action:
                action: call-service
                service: {your_service_id}
                service_data:
                  entity_id: {your_service_entity_id}

grid_options:
  columns: 24
  rows: auto
card_mod:
  style:
    hui-vertical-stack-card$: |
      hui-card {
        position: relative;
        border-radius: 20px;
        transition: all 0.3s ease;
      }
      /* Stacked (only when next card is visible) */
      hui-card:not([hidden]) ~ hui-card:not([hidden]) {
        margin-top: -45px;
        box-shadow: 0 -5px 10px rgba(100,100,100,0.1);
      }
      /* Blur all but the last visible */
      hui-card:has(~ hui-card:not([hidden])) {
        filter: blur(0.6px);
      }
      /* The last/top visible card stays clear */
      hui-card:not(:has(~ hui-card:not([hidden]))) {
        filter: none;
        background: var(--card-background-color);
      }
      /* On hover/active â†’ unstack and clear ALL */
      :host(:hover) hui-card,
      :host(:active) hui-card {
        margin-top: 0 !important;
        box-shadow: none !important;
        filter: none !important;
      }
